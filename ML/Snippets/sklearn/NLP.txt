import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import string
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

from sklearn.naive_bayes import MultinomialNB
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.pipeline import Pipeline
from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split


def text_process(msg):
    """
    Do some simple data cleansing
    """
    msg = word_tokenize(msg)
    msg = [word for word in msg if word.casefold() not in stopwords.words('english')]
    msg = ' '.join(msg)
    msg = [c for c in msg if c not in string.punctuation]
    msg = ''.join(msg)
    msg = word_tokenize(msg)
    msg = [word for word in msg]
    return msg


messages = pd.read_csv('smsspamcollection/SMSSpamCollection', sep='\t', names=['label', 'message'])

messages['length'] = messages['message'].apply(len)

pipeline = Pipeline([
        ('bow', CountVectorizer(analyzer=text_process)),
        ('tfidf', TfidfTransformer()),
        ('classifier', RandomForestClassifier())
    ])

X_train, X_test, y_train, y_test = train_test_split(messages['message'], messages['label'])

pipeline.fit(X=X_train, y=y_train)
y_pred = pipeline.predict(X_test)
print(classification_report(y_pred=y_pred, y_true=y_test))